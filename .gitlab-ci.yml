stages:
  - build
  - publish

Build:
  stage: build
  image: opentapio/opentap:9.16-ubuntu18.04
  tags: [ docker, gce ]
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd OpenTAP.TUI
    - dotnet build -c Release
    - cp bin/Release/TUI*.TapPackage ..
  artifacts:
    expire_in: 1 week
    paths:
       - "TUI*.TapPackage"

Test:
   stage: build
   image: mcr.microsoft.com/dotnet/sdk:6.0
   tags: [ docker, gce ]
   variables:
     GIT_SUBMODULE_STRATEGY: recursive
   script:
     - cd OpenTap.Tui.UnitTest
     - dotnet build
     - cd bin/Debug
     - ./tap unit-test run OpenTap.Tui.UnitTest.dll -v

PublishAlpha:
  stage: publish
  image: opentapio/opentap:9.16-ubuntu18.04
  tags: [ docker, gce ]
  when: manual
  dependencies:
    - Build
  script:
    - tap package install PackagePublish
    - tap package publish TUI*.TapPackage -k $REPO_KEY

Publish:
  stage: publish
  image: opentapio/opentap:9.16-ubuntu18.04
  tags: [ docker, gce ]
  only:
    - master
  dependencies:
    - Build
  script:
    - tap package install PackagePublish
    - tap package publish TUI*.TapPackage -k $REPO_KEY

pages:
  stage: build
  image: node:9.11.1
  only: 
    - master
  cache:
    paths:
    - node_modules/
  script:
  - cd doc
  - npm install
  - npm run build
  artifacts:
    paths:
    - public
